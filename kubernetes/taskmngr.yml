apiVersion: v1
kind: PersistentVolume
metadata:
  name: static-files-pv
  labels:
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/pv/static-files"

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-data-pv
  labels:
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/pv/postgres-data"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: static-files-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
    name: nginx-conf
data:
    django1.conf: |
        upstream django {
            ip_hash;
            server localhost:8001;
        }

        server {
            listen 8000;
            server_name localhost;

            location / {
                proxy_pass http://django/;
            }

            location /static {
                autoindex on;
                alias /static;
            }
        }

---

apiVersion: v1
kind: Service
metadata:
    labels:
        app: taskmngr
    name: taskmngr
spec:
    ports:
        - name: nginx
          port: 8000
        - name: django
          port: 8001
        - name: postgres
          port: 5432
    selector:
        app: taskmngr
    type: NodePort

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
    labels:
        app: taskmngr
    name: taskmngr
spec:
    replicas: 1
    template:
        metadata:
            labels:
                app: taskmngr
        spec:
            containers:
                - image: nginx
                  name: nginx
                  ports:
                      - containerPort: 8000
                  volumeMounts:
                      - name: nginx-conf
                        mountPath: /etc/nginx/conf.d/
                      - name: static-files
                        mountPath: /static
                - image: bititanb/taskmngr
                  name: django
                  command: ["/bin/sh"]
                  #args: ["-c", "sleep 5 ; python manage.py collectstatic --no-input && python manage.py makemigrations && python manage.py migrate && gunicorn taskmngr.wsgi -b 0.0.0.0:8001"]
                  args: ["-c", "while true; do sleep 5; done"]
                  ports:
                      - containerPort: 8001
                  volumeMounts:
                      - name: static-files
                        mountPath: /django/static
                - image: postgres
                  name: postgres
                  ports:
                      - containerPort: 5432
                  volumeMounts:
                      - name: postgres-data
                        mountPath: /var/lib/postgresql/data
            volumes:
                - name: nginx-conf
                  configMap:
                      name: nginx-conf
                      items:
                          - key: django1.conf
                            path: django1.conf
                - name: static-files
                  persistentVolumeClaim:
                      claimName: static-files-pvc
                - name: postgres-data
                  persistentVolumeClaim:
                      claimName: postgres-data-pvc
    selector:
        matchLabels:
            app: taskmngr

