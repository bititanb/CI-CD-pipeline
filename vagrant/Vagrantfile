# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # config.landrush.enabled = true

  config.vm.box = "bento/centos-7.2"

  config.ssh.username = 'user1'
  config.ssh.password = '1'
  config.ssh.insert_key = true

  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false
  end

  config.vm.define "taskmngr1" do |taskmngr1|
    taskmngr1.vm.provider "virtualbox" do |vb|
      vb.memory = "3800"
      vb.cpus = 2
    end
    taskmngr1.vm.network "private_network", ip: "192.168.59.2",
      virtualbox__intnet: true
    taskmngr1.vm.provision "shell", path: "../scripts/hosts.sh"
    taskmngr1.vm.provision "shell", path: "../scripts/taskmngr-common.sh"
    taskmngr1.vm.provision "shell", path: "../scripts/taskmngr1.sh"
  end

  config.vm.define "taskmngr2" do |taskmngr2|
    taskmngr2.vm.provider "virtualbox" do |vb|
      vb.memory = "750"
      vb.cpus = 2
    end
    taskmngr2.vm.network "private_network", ip: "192.168.59.3",
      virtualbox__intnet: true
    taskmngr2.vm.provision "shell", path: "../scripts/hosts.sh"
    taskmngr2.vm.provision "shell", path: "../scripts/taskmngr-common.sh"
    taskmngr2.vm.provision "shell", path: "../scripts/taskmngr2.sh"
  end

  # config.vm.provision "shell", inline: <<-SHELL
  #   echo 'provisioning successful, rebooting'
  #   (sleep 5 && reboot) &
  # SHELL
end
